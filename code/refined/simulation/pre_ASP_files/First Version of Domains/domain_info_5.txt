%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Abstract Sorts
#place = {library, kitchen, office1, office2, storage_room}.
#object = {book1, book2, book3, book4, cup1,cup2,cup3,cup4}.
#robot = {rob1}.
#thing = #object + #robot.
#boolean = {true, false}.
#inertial_fluent = loc(#thing, #place) + in_hand(#robot, #object).
#fluent = #inertial_fluent.
#rob_action = move(#robot, #place) + pickup(#robot, #object) + put_down(#robot, #object).
#exo_action = exo_move(#object,#place).
#action = #rob_action + #exo_action.
%% End of Abstract Sorts
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Abstract Attributes
next_to(library, kitchen).
next_to(kitchen, office1).
next_to(office1, office2).
next_to(office2, storage_room).
%% End of Abstract Attributes
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Refined Sorts
#coarse_place = {library,kitchen,office1,office2,storage_room}.
#coarse_object = {book1,book2,book3,book4,cup1,cup2,cup3,cup4}.
#object = {ref1_book1,ref2_book1,ref1_book2,ref2_book2, ref1_book3,ref2_book3, ref1_book4,ref2_book4, ref1_cup1,ref2_cup1,ref1_cup2,ref2_cup2,ref1_cup3,ref2_cup3, ref1_cup4,ref2_cup4}.
#place = {c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25,c26,c27,c28,c29,c30,c31,c32,c33,c34,c35,c36,c37,c38,c39,c40,c41,c42,c42,c43,c44,c45,c46,c47,c48,c49,c50}.
#robot = {rob1}.
#coarse_thing = #coarse_object + #robot.
#thing = #object + #robot.
#boolean = {true, false}.
#outcome = {true, false, undet}.
#physical_inertial_fluent = loc(#thing, #place) + in_hand(#robot, #object).
#physical_defined_fluent = coarse_loc(#coarse_thing, #coarse_place) + coarse_in_hand(#robot, #coarse_object).
#physical_fluent = #physical_inertial_fluent + #physical_defined_fluent.
#knowledge_inertial_fluent = can_be_tested(#robot, #physical_inertial_fluent, #boolean) + directly_observed(#robot, #physical_inertial_fluent, #outcome).
#knowledge_defined_fluent = may_discover(#robot, #physical_defined_fluent,#boolean) + observed(#robot, #physical_fluent, #outcome) + indirectly_observed(#robot, #physical_defined_fluent, #outcome).
#inertial_fluent = #physical_inertial_fluent + #knowledge_inertial_fluent.
#defined_fluent = #physical_defined_fluent + #knowledge_defined_fluent.
#fluent = #inertial_fluent + #defined_fluent.
#rob_action = test(#robot, #physical_inertial_fluent, #boolean) + move(#robot, #place) + pickup(#robot, #object) + put_down(#robot, #object).
#exo_action = exo_move(#object,#place).
#action = #rob_action + #exo_action.
#refined_component = #place + #object.
#coarse_component = #coarse_place + #coarse_object.
%% End of Refined Sorts
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Refined Attributes
next_to(c1, c2).
next_to(c2, c3).
next_to(c3, c4).
next_to(c4, c5).
next_to(c5, c6).
next_to(c6, c7).
next_to(c7, c8).
next_to(c8, c9).
next_to(c9, c10).
next_to(c10, c11).
next_to(c11, c12).
next_to(c12, c13).
next_to(c13, c14).
next_to(c14, c15).
next_to(c15, c16).
next_to(c16, c17).
next_to(c17, c18).
next_to(c18, c19).
next_to(c19, c20).
next_to(c20, c21).
next_to(c21, c22).
next_to(c22, c23).
next_to(c23, c24).
next_to(c24, c25).
next_to(c25, c26).
next_to(c26, c27).
next_to(c27, c28).
next_to(c28, c29).
next_to(c29, c30).
next_to(c30, c31).
next_to(c31, c32).
next_to(c32, c33).
next_to(c33, c34).
next_to(c34, c35).
next_to(c35, c36).
next_to(c36, c37).
next_to(c37, c38).
next_to(c38, c39).
next_to(c39, c40).
next_to(c40, c41).
next_to(c41, c42).
next_to(c42, c43).
next_to(c43, c44).
next_to(c44, c45).
next_to(c45, c46).
next_to(c46, c47).
next_to(c47, c48).
next_to(c48, c49).
next_to(c49, c50).



comp(c1, library).
comp(c2, library).
comp(c3, library).
comp(c4, library).
comp(c5, library).
comp(c6, library).
comp(c7, library).
comp(c8, library).
comp(c9, library).
comp(c10, library).
comp(c11, kitchen).
comp(c12, kitchen).
comp(c13, kitchen).
comp(c14, kitchen).
comp(c15, kitchen).
comp(c16, kitchen).
comp(c17, kitchen).
comp(c18, kitchen).
comp(c19, kitchen).
comp(c20, kitchen).
comp(c21, office1).
comp(c22, office1).
comp(c23, office1).
comp(c24, office1).
comp(c25, office1).
comp(c26, office1).
comp(c27, office1).
comp(c28, office1).
comp(c29, office1).
comp(c30, office1).
comp(c31, office2).
comp(c32, office2).
comp(c33, office2).
comp(c34, office2).
comp(c35, office2).
comp(c36, office2).
comp(c37, office2).
comp(c38, office2).
comp(c39, office2).
comp(c40, office2).
comp(c41, storage_room).
comp(c42, storage_room).
comp(c43, storage_room).
comp(c44, storage_room).
comp(c45, storage_room).
comp(c46, storage_room).
comp(c47, storage_room).
comp(c48, storage_room).
comp(c49, storage_room).
comp(c50, storage_room).

comp(ref1_book1, book1).
comp(ref2_book1, book1).
comp(ref1_book2, book2).
comp(ref2_book2, book2).
comp(ref1_book3, book3).
comp(ref2_book3, book3).
comp(ref1_book4, book4).
comp(ref2_book4, book4).

comp(ref1_cup1, cup1).
comp(ref2_cup1, cup1).
comp(ref1_cup2, cup2).
comp(ref2_cup2, cup2).
comp(ref1_cup3, cup3).
comp(ref2_cup3, cup3).
comp(ref1_cup4, cup4).
comp(ref2_cup4, cup4).

%% End of Refined Attributes
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 5*n-4 where n is number of cells
% 2*m where m is number of rooms. This number only works if the goal includes only one fluent. If it includes x fluents we need to multiply this number by x.
max_number_steps_refined_planning = 50
max_number_steps_ToI_planning = 10
